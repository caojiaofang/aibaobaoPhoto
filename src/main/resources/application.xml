<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="    
           http://www.springframework.org/schema/beans    
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
           http://www.springframework.org/schema/aop    
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
           http://www.springframework.org/schema/tx 
	       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
       
       <context:component-scan base-package="com.lizhi">
            <context:exclude-filter type="annotation"
                  expression="org.springframework.stereotype.Controller" />
       </context:component-scan>
       
       <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
       <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
       
       <!-- 引入jdbc配置文件 -->
       <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
               <value>classpath:properties/*.properties</value>  
                <!--要是有多个配置文件，只需在这里继续添加即可 -->  
            </list>  
        </property>  
    </bean>
       
       <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource"></property>
              </bean>

    <!-- 配置数据源 -->  
    <bean id="dataSource"  class="com.alibaba.druid.pool.DruidDataSource">  
       <property name="driverClassName" value="${jdbc.driver}" /><!-- 数据库驱动 -->
       <property name="url" value="${jdbc.url}" /><!-- 数据库连接URL -->
       <property name="username" value="${jdbc.username}" /><!-- 用户 -->
       <property name="password" value="${jdbc.password}" /><!-- 密码 -->
    </bean>  
  
    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" /> 
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:com/lizhi/**/*Mapper.xml"/>
    </bean>  
  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="com.lizhi"></property>
         <property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
    </bean>
</beans>  